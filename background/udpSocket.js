(function(e,s){var t=chrome.sockets.udp;var i;class o{constructor(){if(i){return i}else{i=this;this.option={};this.socketId=0;this.localAddress="0.0.0.0";this.localPort=0;this.SynCallback={};this.isReceive=false}}init(e,s,i){this.isReceive=false;this.SynCallback=i||function(e){};t.create(this.option,async function(e){this.socketId=e.socketId;await t.onReceive.addListener(function(e){if(e.data.byteLength===1450){this.isReceive=true;this.SynCallback({isReceive:this.isReceive,result:e})}}.bind(this));await t.onReceiveError.addListener((e=>{if(e.socket==this.socketId){this.error(info.resultCode)}}));await t.bind(this.socketId,this.localAddress,this.localPort,function(e){if(e!=0){console.log("UDP BIND FAIL, code:"+e);this.error(e);return false}else{console.log("UDP BIND SUCCESS");this.SynCallback({isReceive:this.isReceive})}}.bind(this))}.bind(this))}update(e){t.update(this.socketId,newSocketOption,e)}pause(e,s){t.setPaused(this.socketId,e,s)}close(e){t.close(this.socketId,e)}send(e,s,i,o){t.send(this.socketId,e,s,i,o)}receive(e){console.log("Received data from "+e.removeAddress+":"+e.removePort)}error(e){console.log("UDP error: "+e)}getInfo(e){t.getInfo(this.socketId,e)}}e["UdpSocket"]=new o})(window["ESHARECMCLIENTBG"]["NetWork"],window["ESHARECMCLIENTBG"]["Util"]);
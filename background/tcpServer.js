(function(e,t){DEFAULT_MAX_CONNECTIONS=15;class o{constructor(e,t,o){this.addr=e;this.port=t;this.maxConnections=typeof o!="undefined"&&o.maxConnections||DEFAULT_MAX_CONNECTIONS;this._onAccept=this._onAccept.bind(this);this._onAcceptError=this._onAcceptError.bind(this);this.callbacks={listen:null,connect:null,disconnect:null,recv:null,sent:null};this.openSockets=[];this.serverSocketId=null}isConnected(){return this.serverSocketId>0}listen(e,t){this.callbacks.connect=e;this.callbacks.listen=t;chrome.sockets.tcpServer.create({},this._onCreate.bind(this))}disconnect(){if(this.serverSocketId){chrome.sockets.tcpServer.onAccept.removeListener(this._onAccept);chrome.sockets.tcpServer.onAcceptError.removeListener(this._onAcceptError);chrome.sockets.tcpServer.close(this.serverSocketId)}for(var e=0;e<this.openSockets.length;e++){try{this.openSockets[e].close()}catch(e){console.log(e)}}this.openSockets=[];this.serverSocketId=0}_onCreate(e){this.serverSocketId=e.socketId;if(this.serverSocketId>0){chrome.sockets.tcpServer.onAccept.addListener(this._onAccept);chrome.sockets.tcpServer.onAcceptError.addListener(this._onAcceptError);chrome.sockets.tcpServer.listen(this.serverSocketId,this.addr,this.port,50,this._onListenComplete.bind(this));this.isListening=true}else{console.log("Unable to create socket")}}_onListenComplete(e){if(e!==0){console.log("Unable to listen to socket. Resultcode="+e)}else{chrome.sockets.tcpServer.getInfo(this.serverSocketId,function(e){this.port=e.localPort;if(this.callbacks.listen){this.callbacks.listen()}}.bind(this))}}_onNoMoreConnectionsAvailable(e){var t="No more connections available. Try again later\n";_stringToArrayBuffer(t,(function(t){chrome.sockets.tcp.send(e,t,(function(){chrome.sockets.tcp.close(e)}))}))}_onSocketInfo(e,t){if(this.callbacks.connect){this.callbacks.connect(e,t)}}static getNetworkAddresses(e){chrome.system.network.getNetworkInterfaces(e)}}o.prototype._onAccept=function(e){console.log("[TcpServer_onAccept]");if(e.socketId!=this.serverSocketId)return;if(this.openSockets.length>=this.maxConnections){try{this.openSockets[0].close();this.openSockets.splice(0,1)}catch(e){console.log(e)}}var t=new c(e.clientSocketId);this.openSockets.push(t);t.requestSocketInfo(this._onSocketInfo.bind(this));console.log("Incoming connection handled.")};o.prototype._onAcceptError=function(e){console.log("[TcpServer_onAcceptError]");if(e.socketId!=this.serverSocketId)return;console.log("Unable to accept incoming connection. Error code="+e.resultCode)};function c(e){this.socketId=e;this.socketInfo=null;this.callbacks={disconnect:null,recv:null,sent:null};console.log("Established client connection. Listening...")}c.prototype.setSocketInfo=function(e){this.socketInfo=e};c.prototype.requestSocketInfo=function(e){chrome.sockets.tcp.getInfo(this.socketId,this._onSocketInfo.bind(this,e))};c.prototype.startListening=function(e){this.callbacks.recv=e;this._onReceive=this._onReceive.bind(this);this._onReceiveError=this._onReceiveError.bind(this);chrome.sockets.tcp.onReceive.addListener(this._onReceive);chrome.sockets.tcp.onReceiveError.addListener(this._onReceiveError);chrome.sockets.tcp.setPaused(this.socketId,false)};c.prototype.addDataReceivedListener=function(e){if(!this.callbacks.recv){this.startListening(e)}else{this.callbacks.recv=e}};c.prototype.sendMessage=function(e,o){t.str2abCB(e+"\n",function(e){chrome.sockets.tcp.send(this.socketId,e,this._onWriteComplete.bind(this))}.bind(this));this.callbacks.sent=o};c.prototype.close=function(){if(this.socketId){try{chrome.sockets.tcp.onReceive.removeListener(this._onReceive);chrome.sockets.tcp.onReceiveError.removeListener(this._onReceiveError);chrome.sockets.tcp.close(this.socketId)}catch(e){}}};c.prototype._onSocketInfo=function(e,t){if(e&&typeof e!="function"){console.log("Illegal value for callback: "+e.toString());return}this.socketInfo=t;e(this,t)};c.prototype._onReceive=function(e){if(this.socketId!=e.socketId)return;if(this.callbacks.recv){console.log("onDataRead");t.ab2strCB(e.data,this.callbacks.recv.bind(this))}};c.prototype._onReceiveError=function(e){if(this.socketId!=e.socketId)return;this.close()};c.prototype._onWriteComplete=function(e){if(this.callbacks.sent){this.callbacks.sent(e)}};e["TcpServer"]=o;e["TcpConnection"]=c})(window["ESHARECMCLIENTBG"]["NetWork"],window["ESHARECMCLIENTBG"]["Util"]);
(function(e,t,n,o,s){var r;var i;var o;var s;var c;var a=false;var l=null;var d=null;var u=0;var f;var h;var m;var g;var w;var S;var v;var C;var p="";var P=true;var T=true;class b{constructor(e){if(r){return r}else{r=this;var t=e||{};this.address=t.address||"0.0.0.0";this.port=t.port||48689;this.multicast=t.multicast||"255.255.255.255";this.socketId=-1;this.bufferLength=t.bufferLength||8192;this.services=[];this.initCallback=function(e){}}}discoverTCP(e,t){if(t){let n=null;if(e.pro){n=e.pro}else if(e.boxlightpro){n=e.service.boxlightpro}else{n=e[""]}t({data:n,remoteAddress:e.address})}return}CreateModConn(e,o){l=new t(e,57395);l.init((async function(){if(!l.isConnected){console.warn("[SSDP]Fail to create moderator conn");l.disconnect();l=null;return}else{P=true;T=true;await l.addResponseListener((async function(e){console.log(e);await n.ab2strAsync(e.data,(e=>{console.log(e);let t="";if(e.lastIndexOf("\n")==-1){console.warn("[SSDP]Unexcepted signal end!");p+=e;return}else if(e.lastIndexOf("\n")==e.length-1){if(p!=""){console.warn("[SSDP]Joining cache");e=p+e;p=""}t=e.split(/\r?\n/)}else{console.warn("[SSDP]LINE BREAK not in last pos!");p+=e;return}t.forEach((e=>{let t=null;try{t=JSON.parse(e)}catch(e){}if(t){if(t.hasOwnProperty("hostHeartBeat")){if(P){console.warn("[SSDP]BOXLIGHT protocol detected");chrome.runtime.sendMessage({uiAction:"onProtocolDetected",protocol:"boxlight"});P=false}v=(new Date).getTime();chrome.runtime.sendMessage({uiAction:"ReponseHeart",data:t})}if(t.hasOwnProperty("castInvitation")){chrome.runtime.sendMessage({uiAction:"invitationScreen",castInvitation:t})}if(t.hasOwnProperty("disconnectWithServer")){console.warn("[SSDP]RX order disconnect");chrome.runtime.sendMessage({uiAction:"receiveDisClient",data:t})}if(t.hasOwnProperty("allowCast")){chrome.runtime.sendMessage({uiAction:"reponseCastRequest",data:t})}}if(e.search("replyClientInfo")>0){chrome.runtime.sendMessage({uiAction:"StartSendHeart",data:e});console.log("这里是竖屏返回消息处"+e)}if(e.search("replyHeartbeat")>0){if(T){console.warn("[SSDP]COMMON protocol detected");chrome.runtime.sendMessage({uiAction:"onProtocolDetected",protocol:"common"});T=false}v=(new Date).getTime();chrome.runtime.sendMessage({uiAction:"ReponseHeart",data:e})}if(e.search("replyCastRequest")>0){chrome.runtime.sendMessage({uiAction:"reponseCastRequest",data:e})}if(e.search("disconnectClient")>0){chrome.runtime.sendMessage({uiAction:"receiveDisClient",data:e})}if(e.search("stopCast")>0){chrome.runtime.sendMessage({uiAction:"stopFromService",data:e})}if(e.search("inviteCast")>0){if(P)chrome.runtime.sendMessage({uiAction:"invitationScreen",castInvitation:e})}if(e.search("cancelCastInvite")>0){chrome.runtime.sendMessage({uiAction:"cancelinvitationScreen",castInvitation:e})}if(e.search("transferHost")>0){chrome.runtime.sendMessage({uiAction:"transferHost",transferHost:e})}if(e.search("allowCast")>0){chrome.runtime.sendMessage({uiAction:"allowCast",allowCast:e})}if(e.search("requestCastClient")>0){chrome.runtime.sendMessage({uiAction:"requestCastClientServer",requestCastClient:e})}if(e.search("allowClientCast")>0){chrome.runtime.sendMessage({uiAction:"allowClientCastService",requestCastClient:e})}if(e.search("castStatus")>0){chrome.runtime.sendMessage({uiAction:"fullCastSuccessService",requestCastClient:e})}}))}))}));C=(new Date).getTime();v=(new Date).getTime();if(g){clearInterval(g)}let e=await n.str2ab(JSON.stringify({clientName:deviceNameBE,clientOSType:4})+"\r\n");console.warn("[SSDP]BOXLIGHT AUTH, name:"+deviceNameBE);await l.send(e);setTimeout((function(){g=setInterval((async function(){if(T&&P){console.warn("[SSDP]BOXLIGHT AUTH, name:"+deviceNameBE);await l.send(e)}else{clearInterval(g)}}),2e3);if(P){let e=n.str2ab(o);l.send(e)}if(m){clearInterval(m)}m=setInterval((async function(){if(!T&&!P){console.warn("[SSDP]No protocol supported!");return}if(P){f=JSON.stringify({heartbeat:u++});h=n.str2ab(f+"\r\n");if(u>15e5){u=0}await l.send(h,(function(e){}));C=(new Date).getTime();console.log("HeartBeat OK, TYPE:COMMON")}if(T){f=JSON.stringify({hostHeartBeat:"hostHeartBeat"});h=n.str2ab(f+"\r\n");await l.send(h,(function(e){}));C=(new Date).getTime();console.log("HeartBeat OK, TYPE:BOXLIGHT")}}),1e3)}),1e3);if(w){clearInterval(w)}w=setInterval((function(){if(C-v>1e4){console.log(C);console.log(v);console.warn("Moderator heartbeat timeout!");chrome.runtime.sendMessage({uiAction:"modHeartBeatTimeout"});clearInterval(m);m=undefined;C=0;v=0;u=0}}),1e3)}}))}checkCode(e,o){d=new t(e,8121);d.init((async function(){if(!d.isConnected){console.log("TCP create failed");d.disconnect((function(){console.log("TCP disconnected")}));return}d.addResponseListener((async function(t){let o=await n.ab2str(t.data);if(o.search("check")>-1){console.log("[SSDP]AUTH STEP 2");console.warn("[SSDP]Auth result: "+o.trim());chrome.runtime.sendMessage({uiAction:"checkpwd",checkPassword:o,address:e})}else if(o.search("configed")>-1){console.log("[SSDP]AUTH STEP 1");if(o.search("configed none")>-1){console.log("[SSDP]Password is disabled")}else{console.warn("[SSDP]Password is required")}chrome.runtime.sendMessage({uiAction:"checkPwdThree",checkPassword:o})}else if(o.search("feature")>-1){console.log("[SSDP]AUTH STEP 3");try{console.warn("[SSDP]Features(JSON):"+JSON.stringify(JSON.parse(o)));chrome.runtime.sendMessage({uiAction:"onFeaturesReceived",data:{data:o,protocol:"json"}})}catch(e){console.warn("[SSDP]Unable to parse features as JSON");console.warn("[SSDP]Features(OLD):"+o);chrome.runtime.sendMessage({uiAction:"onFeaturesReceived",data:{data:o,protocol:"original"}})}}else{console.warn("[WARN]Unknown response! "+o)}}));let t=await n.str2ab(o);d.send(t,(e=>{console.log(e)}))}));setTimeout((function(){if(d&&!d.isConnected){console.log("%c Connect to "+e+":8121 timeout!","background: #222; color: #bada55");d.disconnect();d=null}}),2800)}startCastSocketChecker(){if(S){console.log("[SSDP]Cleaning Unexcepted CastSocketChecker");clearInterval(S)}let e=(new Date).getTime();d.addResponseListener((function(t){e=(new Date).getTime()}));let t=n.str2ab("getFeatures\r\nchrome-common\r\n\r\n");S=setInterval((function(){if(!d||!r.IsCastConnConnected){console.warn("[SSDP]CastSocket disconnected");if(S){clearInterval(S);S=undefined}chrome.runtime.sendMessage({uiAction:"modHeartBeatTimeout"});return}else if((new Date).getTime()-e>5e3){console.warn("[SSDP]CastSocket timeout");chrome.runtime.sendMessage({uiAction:"modHeartBeatTimeout"});if(S){clearInterval(S);S=undefined}return}else{try{d.send(t,(function(){}))}catch(e){}}}),1e3)}sayhelloclient(e,o){var s=new t(e,8121);s.init((function(){if(!s.isConnected){console.log("TCP create failed");s.disconnect((function(){console.log("TCP disconnected")}));return}s.addResponseListener((function(e){console.log("this is socketid6"+e.socketId);var t=n.ab2str(e.data)}));var e=new ArrayBuffer(4);var t=new DataView(e);var r=n.str2ab(o);s.send(r,(function(e){}))}))}powerfun(e,o){var s=new t(o,53e3);s.init((function(){if(!s.isConnected){console.log("TCP create failed");s.disconnect((function(){console.log("TCP disconnected")}));return}console.log("TCP created:"+e);s.addResponseListener((function(e){console.log("this is socketid7"+e.socketId);powerData=n.ab2str(e.data);chrome.runtime.sendMessage({uiAction:"checkPowerUi",checkpower:powerData});s.disconnect((function(){console.log("powerfun socket  tcp disconnected")}))}));var t=new ArrayBuffer(4);var o=new DataView(t);var r=n.str2ab(e);s.send(r,(function(e){}))}))}init(e){this.initCallback=e||function(e){};chrome.sockets.udp.create({},function(e){var t=e.socketId;chrome.sockets.udp.onReceive.addListener(function(e){let t=n.ab2str(e.data);this.processNotify(t,e.remoteAddress)}.bind(this));chrome.sockets.udp.setMulticastTimeToLive(t,12,function(e){if(e!==0)console.log("Error setting multicast TTL"+e)}.bind(this));chrome.sockets.udp.setMulticastLoopbackMode(t,true,function(e){if(e!==0)console.log("Error setting multicast loop-back mode: "+e)}.bind(this));this.binding(t,this.port,function(e){if(e!==0){console.log("Unable to bind to new socket: "+e);return this.initCallback(e)}if(e!==0){console.log("Unable to join multicast group "+this.multicast+": "+e)}else{this.socketId=t}this.initCallback(e)}.bind(this))}.bind(this))}binding(e,t,n){chrome.sockets.udp.bind(e,this.address,t,function(t){if(t===0)return n(t);console.log("Unable to bind to new socket: "+t+", trying to bind to random port");chrome.sockets.udp.bind(e,this.multicast,this.port,n)}.bind(this))}sendEShareDiscover(){chrome.sockets.udp.setBroadcast(this.socketId,true,(e=>{if(e!=0){console.warn("[SSDP]Fail to boardcast,code:"+e)}}));let e=new ArrayBuffer(34);let t=new Uint8Array(e);let n=[70,105,110,100,69,67,108,111,117,100,66,111,120];t[15]=n.length;for(var o=0,s=20;o<n.length;o++,s++){t[s]=n[o]}t[s]=0;chrome.sockets.udp.send(this.socketId,e,this.multicast,this.port,(function(e){}))}sendBoxlightDiscover(){chrome.sockets.udp.setBroadcast(this.socketId,true,(e=>{if(e!=0){console.warn("[SSDP]Fail to boardcast,code:"+e)}}));let e=new ArrayBuffer(34);let t=new Uint8Array(e);let n=[70,105,110,100,66,111,120,108,105,103,104,116];t[15]=n.length;for(var o=0,s=20;o<n.length;o++,s++){t[s]=n[o]}t[s]=0;chrome.sockets.udp.send(this.socketId,e,this.multicast,this.port,(function(e){}))}processNotify(e,t){if(!e.startsWith("ECloud")&&!e.startsWith("BoxlightPro")){return}else{let n=e.split(":");let o=n[1];let s=n[5].split("=")[1];chrome.runtime.sendMessage({uiAction:"found",data:{ip:t,features:s,name:o}});const r={pro:n.slice(1).join(":"),address:t};this.addServiceToCache(r)}}shutdown(){chrome.sockets.udp.getSockets((function(e){e.forEach((function(e){try{chrome.sockets.udp.close(e.socketId)}catch(e){}}))}))}getServices(e){e(this.services)}addServiceToCache(e){this.removeServiceFromCache(e);this.services.push(e)}removeServiceFromCache(e){this.services=this.services.filter((function(t,n,o){return t.address!=e.address}))}IsModConnConnected(){if(l&&l.isConnected){return true}return false}IsCastConnConnected(){if(d&&d.isConnected)return true;else return false}SendToModConn(e){if(l&&l.isConnected){var t=n.str2ab(e+"\r\n");l.send(t,(function(){}))}else{console.warn("[SSDP]Moderator conn is NOT WORKING")}}async disconnectWithReceiver(){if(d){console.log("[SSDP]Disconnecting 8121");await d.disconnect();d=null}else{console.warn("[SSDP]8121 is not exist or connected")}if(l&&l.isConnected){if(S){clearInterval(S)}if(P){console.log("[SSDP]Postitive disconnect, TYPE:COMMON");await l.send(n.str2ab(JSON.stringify({disconnect:"N"})),(function(){}))}if(T){console.log("[SSDP]Postitive disconnect, TYPE:BOXLIGHT");await l.send(n.str2ab(JSON.stringify({disconnectWithServer:true})),(function(){}))}console.warn("Sent disconnect to 57395 SUCCESS");if(m){clearInterval(m);m=undefined}if(g){clearInterval(g);g=undefined}if(w){clearInterval(w);w=undefined;C=0;v=0}console.log("[SSDP]Disconnecting 57395");await l.disconnect((e=>{console.log("[SSDP]57395 Disconnected")}));l=null}else{console.warn("[SSDP]57395 is not exist or connected")}}}window.disconcd=false;window.windowfeature=function(e,o){var s=new t(e,52040);var r=e;s.init((function(){if(!s.isConnected)return console.log("TCP create failed"),void s.disconnect((function(){console.log("52040 TCP disconnected")}));console.log("TCP created:"+e+" protocol:"+o+"windowfeature"),s.addResponseListener((function(e){console.log("this is socketid2"+e.socketId);windowfeatureTWO=n.ab2str(e.data);console.log(e.data);jiou=windowfeatureTWO.split("&");server_Broadcast=jiou[jiou.length-1].split("=");server_broadcast=server_Broadcast[server_Broadcast.length-1].replace(/\s+/g,"");window.turereturn;var t=globalMirror;if(server_broadcast=="true"){a=true;if(t==true){return}if(disconcd==true){return}turereturn=setInterval((function(){chrome.runtime.sendMessage({uiAction:"returnjs",returnimg:r})}),1e3)}else if(server_broadcast=="false"){a=false;if(turereturn){window.clearInterval(turereturn)}chrome.runtime.sendMessage({uiAction:"closeReturnWindow"})}else if(windowfeatureTWO.replace(/\s+/g,"")=="startMirror"){chrome.runtime.sendMessage({uiAction:"closeReturnWindow"});chrome.runtime.sendMessage({uiAction:"btnStartMirror"});if(turereturn){clearInterval(turereturn)}}else if(windowfeatureTWO.replace(/\s+/g,"")=="stopMirror"){if(cancelcast==false){chrome.runtime.sendMessage({uiAction:"btnStopMirrorCancel"});if(a==true){turereturn=setInterval((function(){chrome.runtime.sendMessage({uiAction:"returnjs",returnimg:r})}),1e3)}}else{chrome.runtime.sendMessage({uiAction:"btnStopMirror"})}}if(windowfeatureTWO.replace(/\s+/g,"")=="heartBeat"){}}));var t=new ArrayBuffer(4);var i=new DataView(t);var c=n.str2ab(o);switch(o){case"stopreturn":if(returnScreen){clearInterval(returnScreen)}returnScreen=null;disconcd=true;s.send(n.str2ab("/disConnected\r\n"+deviceNameBE+"\r\n4\r\n"),(function(e){}));s.disconnect((function(){console.log("TCP disconnected")}));break;case"/Connected\r\n"+deviceNameBE+"\r\n4\r\n":disconcd=false;s.send(c,(function(e){}));break;case"/HeartBeat\r\n"+deviceNameBE+"\r\n":returnScreen=setInterval((function(){s.send(c,(function(e){}))}),1e3);break;default:s.send(c,(function(e){}))}}))};window.sendTCPMsg=function(e,o,s){var r=new t(o,s);r.init((function(){if(!r.isConnected){console.log("TCP create failed");r.disconnect((function(){console.log("TCP disconnected")}));return}console.log("TCP created:"+o+" msg: "+e);r.addResponseListener((function(e){console.log("this is socketid3"+e.socketId);var t=n.ab2str(e.data);r.disconnect((function(){console.log("TCP disconnected")}))}));var t=new ArrayBuffer(4);var s=new DataView(t);var i=n.str2ab(e);r.send(i,(function(e){}))}))};e["SSDP"]=new b})(window["ESHARECMCLIENTBG"]["NetWork"],window["ESHARECMCLIENTBG"]["NetWork"]["TcpSocket"],window["ESHARECMCLIENTBG"]["Util"],window["ESHARECMCLIENTBG"]["JpgPackets"],window["ESHARECMCLIENTBG"]["background"]["TVMirror"]);
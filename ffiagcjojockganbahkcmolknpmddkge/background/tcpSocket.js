(function(e,t){var s=chrome.sockets.tcp;class o{constructor(e,t){this.host=e;this.port=t;this.socketId=0;this.isConnected=false;this.callbacks={connect:null,disconnect:null,recv:null,sent:null,sentImage:null,onError:null}}addResponseListener(e){this.callbacks.recv=e}setErrorListener(e){this.callbacks.onError=e}init(e){this.callbacks.connect=e;s.create({persistent:true},this.onCreate.bind(this))}onCreate(e){if(chrome.runtime.lastError){this.error("Unable to create socket: "+chrome.runtime.lastError.message);this.isConnected=false;return}else{if(this.host==null||this.port==null){console.warn("[tcpSocket]Unknown dst("+this.host+":"+this.port+")!");return}console.log("[tcpSocket]Connecting,addr:"+this.host+":"+this.port+",socketID:"+e.socketId);this.socketId=e.socketId;s.connect(this.socketId,this.host,this.port,this.onConnectComplete.bind(this))}}onConnectComplete(e){if(e<0){console.warn("[tcpSocket]Fail to connect,addr:"+this.host+":"+this.port+",socketID:"+this.socketId+",code:"+e);this.error("Unable to connect to server");return}else{console.log("[tcpSocket]Connected,addr:"+this.host+":"+this.port+",socketID:"+this.socketId+",code:"+e);this.keepAlive(true,5);this.noDelay(true);this.pause(false);this.isConnected=true;s.onReceive.addListener(this.onReceive.bind(this));s.onReceiveError.addListener(this.onReceiveError.bind(this));if(this.callbacks.connect){this.callbacks.connect()}}}update(){s.update(this.socketId,newSocketOption,(function(){}))}pause(e){s.setPaused(this.socketId,e,(function(){}))}keepAlive(e,t){s.setKeepAlive(this.socketId,e,t,(function(){}))}noDelay(e){s.setNoDelay(this.socketId,e,(function(){}))}disconnect(e){try{let t=this;s.getInfo(this.socketId,(o=>{try{if(o.connected){s.onReceive.removeListener(t.onReceive);s.onReceiveError.removeListener(t.onReceiveError);s.disconnect(o.socketId,e)}s.close(o.socketId)}catch(e){console.warn("[tcpSocket]Fail to disconnect! "+e)}}))}catch(e){console.warn("[tcpSocket]Fail to get socket info! "+e)}this.socketId=null;this.isConnected=false}error(e){let t="TCP error occurred with code "+e;if(this.callbacks.onError)this.callbacks.onError(t)}onReceive(e){if(e.socketId!=this.socketId){return}else if(this.callbacks.recv){this.callbacks.recv(e)}}onReceiveError(e){if(e.socketId==this.socketId){s.getInfo(e.socketId,(e=>{if(!e||!e.connected){console.log("[tcpSocket]"+this.host+":"+this.port+" disconnected");chrome.runtime.sendMessage({uiAction:"receiverError"})}}))}else{this.error("Unable to receive data from socket: "+e.resultCode)}}sendImage(e){try{s.send(this.socketId,e,this.onSendImage.bind(this))}catch(e){if(this.callbacks.onError)this.callbacks.onError(e)}}onSendImage(e){if(this.callbacks.sentImage){this.callbacks.sentImage(e)}}send(e){try{s.send(this.socketId,e,(e=>{if(e.resultCode==0){return}else{console.warn("[tcpSocket]Invalid resultcode "+e.resultCode+"!")}}))}catch(e){if(this.callbacks.onError){console.warn("[tcpSocket]Fail to send! addr:"+this.host+":"+this.port+",err:"+e);this.callbacks.onError(e)}else{console.warn("[tcpSocket]Fail to send! addr:"+this.host+":"+this.port+",err:"+e)}}}onSendComplete(e){if(this.callbacks.sent){this.callbacks.sent(e)}}checkStatus(){s.getInfo(this.socketId,(function(e){console.log(e)}))}}e["TcpSocket"]=o})(window["ESHARECMCLIENTBG"]["NetWork"],window["ESHARECMCLIENTBG"]["Util"]);